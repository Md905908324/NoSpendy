{"ast":null,"code":"var _jsxFileName = \"/Users/eddy/My Drive/NYU/Others/Hackathon/NoSpendy/NoSpendyFrontend/src/dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./dashboard.css\";\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [dashboardData, setDashboardData] = useState({\n    totalExpenses: 0,\n    spendingChallenge: 0,\n    spentThisMonth: 0,\n    streak: 0,\n    loading: true,\n    error: null\n  });\n  const [expenses, setExpenses] = useState([]);\n  const [expensesLoading, setExpensesLoading] = useState(true);\n  const [monthlyData, setMonthlyData] = useState({\n    labels: [],\n    amounts: []\n  });\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        // Get monthly expenses\n        const monthlyResponse = await axios.get('/expenses/monthly', {\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`\n          }\n        });\n\n        // Get all expenses for total\n        const allExpensesResponse = await axios.get('/expenses/all', {\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`\n          }\n        });\n\n        // Get user profile for savings goal and streak\n        const userProfileResponse = await axios.get('/users/profile', {\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`\n          }\n        });\n\n        // Calculate total expenses\n        const totalExpenses = allExpensesResponse.data.reduce((sum, expense) => sum + expense.amount, 0);\n\n        // Get monthly spending\n        const spentThisMonth = monthlyResponse.data.totalSpent;\n\n        // Get user's savings goal (spending challenge)\n        const spendingChallenge = userProfileResponse.data.savingsGoal || 0;\n\n        // Get user's streak\n        const streak = userProfileResponse.data.streak || 0;\n\n        // Set expenses for history section\n        setExpenses(allExpensesResponse.data);\n        setExpensesLoading(false);\n\n        // Prepare data for the monthly spending chart\n        prepareMonthlyChartData(allExpensesResponse.data);\n        setDashboardData({\n          totalExpenses,\n          spendingChallenge,\n          spentThisMonth,\n          streak,\n          loading: false,\n          error: null\n        });\n      } catch (error) {\n        console.error(\"Error fetching dashboard data:\", error);\n        setDashboardData(prev => ({\n          ...prev,\n          loading: false,\n          error: \"Failed to load dashboard data\"\n        }));\n        setExpensesLoading(false);\n      }\n    };\n    if (currentUser) {\n      fetchDashboardData();\n    }\n  }, [currentUser]);\n\n  // Prepare data for the monthly spending chart\n  const prepareMonthlyChartData = expenses => {\n    // Group expenses by month\n    const monthlyExpenses = {};\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    expenses.forEach(expense => {\n      const date = new Date(expense.createdAt);\n      const monthYear = `${monthNames[date.getMonth()]} ${date.getFullYear()}`;\n      if (!monthlyExpenses[monthYear]) {\n        monthlyExpenses[monthYear] = 0;\n      }\n      monthlyExpenses[monthYear] += expense.amount;\n    });\n\n    // Get the last 6 months or all months if less than 6\n    const sortedMonths = Object.keys(monthlyExpenses).sort((a, b) => {\n      const [aMonth, aYear] = a.split(' ');\n      const [bMonth, bYear] = b.split(' ');\n      if (aYear !== bYear) return parseInt(aYear) - parseInt(bYear);\n      return monthNames.indexOf(aMonth) - monthNames.indexOf(bMonth);\n    });\n    const recentMonths = sortedMonths.slice(-6);\n    const recentAmounts = recentMonths.map(month => monthlyExpenses[month]);\n    setMonthlyData({\n      labels: recentMonths,\n      amounts: recentAmounts\n    });\n  };\n\n  // Format date for expense history\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Chart configuration\n  const chartData = {\n    labels: monthlyData.labels,\n    datasets: [{\n      label: 'Monthly Spending',\n      data: monthlyData.amounts,\n      backgroundColor: '#4caf50',\n      borderColor: '#388e3c',\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Monthly Spending Overview'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Amount ($)'\n        }\n      }\n    }\n  };\n  if (dashboardData.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-loading\",\n      children: \"Loading dashboard data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"NoSpendy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"active\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/expenses\",\n            children: \"Log Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), dashboardData.error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: dashboardData.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-amount\",\n            children: [\"$\", dashboardData.totalExpenses.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Spending Challenge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-amount\",\n            children: [\"$\", dashboardData.spendingChallenge.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Spent This Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-amount\",\n            children: [\"$\", dashboardData.spentThisMonth.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Streak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-amount\",\n            children: [dashboardData.streak, \" Days\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spending-chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Spending Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: monthlyData.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n            data: chartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data-message\",\n            children: \"Not enough data to display chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spending-history-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Spending History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), expensesLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading expense history...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this) : expenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-expenses\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No expenses recorded yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/expenses\",\n            className: \"action-button\",\n            children: \"Log Your First Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-history\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"expense-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: expenses.map(expense => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatDate(expense.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: expense.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: expense.description || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"amount\",\n                  children: [\"$\", expense.amount.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this)]\n              }, expense._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-actions\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/expenses\",\n          className: \"action-button\",\n          children: \"Log New Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"e/S2tZXTvPbZ6iXDOa4LDZBnqP0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","Link","axios","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","currentUser","dashboardData","setDashboardData","totalExpenses","spendingChallenge","spentThisMonth","streak","loading","error","expenses","setExpenses","expensesLoading","setExpensesLoading","monthlyData","setMonthlyData","labels","amounts","fetchDashboardData","monthlyResponse","get","headers","Authorization","token","allExpensesResponse","userProfileResponse","data","reduce","sum","expense","amount","totalSpent","savingsGoal","prepareMonthlyChartData","console","prev","monthlyExpenses","monthNames","forEach","date","Date","createdAt","monthYear","getMonth","getFullYear","sortedMonths","Object","keys","sort","a","b","aMonth","aYear","split","bMonth","bYear","parseInt","indexOf","recentMonths","slice","recentAmounts","map","month","formatDate","dateString","options","year","day","toLocaleDateString","undefined","chartData","datasets","label","backgroundColor","borderColor","borderWidth","chartOptions","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","type","placeholder","toFixed","length","category","description","_id","_c","$RefreshReg$"],"sources":["/Users/eddy/My Drive/NYU/Others/Hackathon/NoSpendy/NoSpendyFrontend/src/dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./dashboard.css\";\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\n// Register ChartJS components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Dashboard = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [dashboardData, setDashboardData] = useState({\r\n    totalExpenses: 0,\r\n    spendingChallenge: 0,\r\n    spentThisMonth: 0,\r\n    streak: 0,\r\n    loading: true,\r\n    error: null\r\n  });\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [expensesLoading, setExpensesLoading] = useState(true);\r\n  const [monthlyData, setMonthlyData] = useState({\r\n    labels: [],\r\n    amounts: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        // Get monthly expenses\r\n        const monthlyResponse = await axios.get('/expenses/monthly', {\r\n          headers: {\r\n            Authorization: `Bearer ${currentUser.token}`\r\n          }\r\n        });\r\n\r\n        // Get all expenses for total\r\n        const allExpensesResponse = await axios.get('/expenses/all', {\r\n          headers: {\r\n            Authorization: `Bearer ${currentUser.token}`\r\n          }\r\n        });\r\n\r\n        // Get user profile for savings goal and streak\r\n        const userProfileResponse = await axios.get('/users/profile', {\r\n          headers: {\r\n            Authorization: `Bearer ${currentUser.token}`\r\n          }\r\n        });\r\n\r\n        // Calculate total expenses\r\n        const totalExpenses = allExpensesResponse.data.reduce(\r\n          (sum, expense) => sum + expense.amount, \r\n          0\r\n        );\r\n\r\n        // Get monthly spending\r\n        const spentThisMonth = monthlyResponse.data.totalSpent;\r\n\r\n        // Get user's savings goal (spending challenge)\r\n        const spendingChallenge = userProfileResponse.data.savingsGoal || 0;\r\n\r\n        // Get user's streak\r\n        const streak = userProfileResponse.data.streak || 0;\r\n\r\n        // Set expenses for history section\r\n        setExpenses(allExpensesResponse.data);\r\n        setExpensesLoading(false);\r\n\r\n        // Prepare data for the monthly spending chart\r\n        prepareMonthlyChartData(allExpensesResponse.data);\r\n\r\n        setDashboardData({\r\n          totalExpenses,\r\n          spendingChallenge,\r\n          spentThisMonth,\r\n          streak,\r\n          loading: false,\r\n          error: null\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching dashboard data:\", error);\r\n        setDashboardData(prev => ({\r\n          ...prev,\r\n          loading: false,\r\n          error: \"Failed to load dashboard data\"\r\n        }));\r\n        setExpensesLoading(false);\r\n      }\r\n    };\r\n\r\n    if (currentUser) {\r\n      fetchDashboardData();\r\n    }\r\n  }, [currentUser]);\r\n\r\n  // Prepare data for the monthly spending chart\r\n  const prepareMonthlyChartData = (expenses) => {\r\n    // Group expenses by month\r\n    const monthlyExpenses = {};\r\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    \r\n    expenses.forEach(expense => {\r\n      const date = new Date(expense.createdAt);\r\n      const monthYear = `${monthNames[date.getMonth()]} ${date.getFullYear()}`;\r\n      \r\n      if (!monthlyExpenses[monthYear]) {\r\n        monthlyExpenses[monthYear] = 0;\r\n      }\r\n      \r\n      monthlyExpenses[monthYear] += expense.amount;\r\n    });\r\n    \r\n    // Get the last 6 months or all months if less than 6\r\n    const sortedMonths = Object.keys(monthlyExpenses).sort((a, b) => {\r\n      const [aMonth, aYear] = a.split(' ');\r\n      const [bMonth, bYear] = b.split(' ');\r\n      \r\n      if (aYear !== bYear) return parseInt(aYear) - parseInt(bYear);\r\n      return monthNames.indexOf(aMonth) - monthNames.indexOf(bMonth);\r\n    });\r\n    \r\n    const recentMonths = sortedMonths.slice(-6);\r\n    const recentAmounts = recentMonths.map(month => monthlyExpenses[month]);\r\n    \r\n    setMonthlyData({\r\n      labels: recentMonths,\r\n      amounts: recentAmounts\r\n    });\r\n  };\r\n\r\n  // Format date for expense history\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  // Chart configuration\r\n  const chartData = {\r\n    labels: monthlyData.labels,\r\n    datasets: [\r\n      {\r\n        label: 'Monthly Spending',\r\n        data: monthlyData.amounts,\r\n        backgroundColor: '#4caf50',\r\n        borderColor: '#388e3c',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  \r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Monthly Spending Overview',\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: 'Amount ($)'\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  if (dashboardData.loading) {\r\n    return <div className=\"dashboard-loading\">Loading dashboard data...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"sidebar\">\r\n        <h2>NoSpendy</h2>\r\n        <ul>\r\n          <li className=\"active\">Dashboard</li>\r\n          <li><Link to=\"/expenses\">Log Expenses</Link></li>\r\n        </ul>\r\n      </div>\r\n      \r\n      <div className=\"main-content\">\r\n        <div className=\"topbar\">\r\n          <h1>Dashboard</h1>\r\n          <div className=\"search\">\r\n            <input type=\"text\" placeholder=\"Search...\" />\r\n          </div>\r\n        </div>\r\n        \r\n        {dashboardData.error && (\r\n          <div className=\"error-message\">{dashboardData.error}</div>\r\n        )}\r\n        \r\n        <div className=\"top-stats\">\r\n          <div className=\"stat-card\">\r\n            <h3>Total Expenses</h3>\r\n            <div className=\"stat-amount\">${dashboardData.totalExpenses.toFixed(2)}</div>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>Spending Challenge</h3>\r\n            <div className=\"stat-amount\">${dashboardData.spendingChallenge.toFixed(2)}</div>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>Spent This Month</h3>\r\n            <div className=\"stat-amount\">${dashboardData.spentThisMonth.toFixed(2)}</div>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>Streak</h3>\r\n            <div className=\"stat-amount\">{dashboardData.streak} Days</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Spending Chart Section */}\r\n        <div className=\"spending-chart-section\">\r\n          <h2>Spending Overview</h2>\r\n          <div className=\"chart-container\">\r\n            {monthlyData.labels.length > 0 ? (\r\n              <Bar data={chartData} options={chartOptions} />\r\n            ) : (\r\n              <p className=\"no-data-message\">Not enough data to display chart</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Spending History Section */}\r\n        <div className=\"spending-history-section\">\r\n          <h2>Spending History</h2>\r\n          \r\n          {expensesLoading ? (\r\n            <p>Loading expense history...</p>\r\n          ) : expenses.length === 0 ? (\r\n            <div className=\"no-expenses\">\r\n              <p>No expenses recorded yet.</p>\r\n              <Link to=\"/expenses\" className=\"action-button\">Log Your First Expense</Link>\r\n            </div>\r\n          ) : (\r\n            <div className=\"expense-history\">\r\n              <table className=\"expense-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Date</th>\r\n                    <th>Category</th>\r\n                    <th>Description</th>\r\n                    <th>Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {expenses.map(expense => (\r\n                    <tr key={expense._id}>\r\n                      <td>{formatDate(expense.createdAt)}</td>\r\n                      <td>{expense.category}</td>\r\n                      <td>{expense.description || '-'}</td>\r\n                      <td className=\"amount\">${expense.amount.toFixed(2)}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"dashboard-actions\">\r\n          <Link to=\"/expenses\" className=\"action-button\">\r\n            Log New Expense\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;;AAE3G;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,OAAO,CAACS,QAAQ,CAACR,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,MAAMI,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAY,CAAC,GAAGlB,UAAU,CAACC,WAAW,CAAC;EAC/C,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC;IACjDuB,aAAa,EAAE,CAAC;IAChBC,iBAAiB,EAAE,CAAC;IACpBC,cAAc,EAAE,CAAC;IACjBC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC+B,eAAe,EAAEC,kBAAkB,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAC;IAC7CmC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE;EACX,CAAC,CAAC;EAEFnC,SAAS,CAAC,MAAM;IACd,MAAMoC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF;QACA,MAAMC,eAAe,GAAG,MAAMjC,KAAK,CAACkC,GAAG,CAAC,mBAAmB,EAAE;UAC3DC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUrB,WAAW,CAACsB,KAAK;UAC5C;QACF,CAAC,CAAC;;QAEF;QACA,MAAMC,mBAAmB,GAAG,MAAMtC,KAAK,CAACkC,GAAG,CAAC,eAAe,EAAE;UAC3DC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUrB,WAAW,CAACsB,KAAK;UAC5C;QACF,CAAC,CAAC;;QAEF;QACA,MAAME,mBAAmB,GAAG,MAAMvC,KAAK,CAACkC,GAAG,CAAC,gBAAgB,EAAE;UAC5DC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUrB,WAAW,CAACsB,KAAK;UAC5C;QACF,CAAC,CAAC;;QAEF;QACA,MAAMnB,aAAa,GAAGoB,mBAAmB,CAACE,IAAI,CAACC,MAAM,CACnD,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,GAAGC,OAAO,CAACC,MAAM,EACtC,CACF,CAAC;;QAED;QACA,MAAMxB,cAAc,GAAGa,eAAe,CAACO,IAAI,CAACK,UAAU;;QAEtD;QACA,MAAM1B,iBAAiB,GAAGoB,mBAAmB,CAACC,IAAI,CAACM,WAAW,IAAI,CAAC;;QAEnE;QACA,MAAMzB,MAAM,GAAGkB,mBAAmB,CAACC,IAAI,CAACnB,MAAM,IAAI,CAAC;;QAEnD;QACAI,WAAW,CAACa,mBAAmB,CAACE,IAAI,CAAC;QACrCb,kBAAkB,CAAC,KAAK,CAAC;;QAEzB;QACAoB,uBAAuB,CAACT,mBAAmB,CAACE,IAAI,CAAC;QAEjDvB,gBAAgB,CAAC;UACfC,aAAa;UACbC,iBAAiB;UACjBC,cAAc;UACdC,MAAM;UACNC,OAAO,EAAE,KAAK;UACdC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdyB,OAAO,CAACzB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDN,gBAAgB,CAACgC,IAAI,KAAK;UACxB,GAAGA,IAAI;UACP3B,OAAO,EAAE,KAAK;UACdC,KAAK,EAAE;QACT,CAAC,CAAC,CAAC;QACHI,kBAAkB,CAAC,KAAK,CAAC;MAC3B;IACF,CAAC;IAED,IAAIZ,WAAW,EAAE;MACfiB,kBAAkB,CAAC,CAAC;IACtB;EACF,CAAC,EAAE,CAACjB,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAMgC,uBAAuB,GAAIvB,QAAQ,IAAK;IAC5C;IACA,MAAM0B,eAAe,GAAG,CAAC,CAAC;IAC1B,MAAMC,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAEvG3B,QAAQ,CAAC4B,OAAO,CAACT,OAAO,IAAI;MAC1B,MAAMU,IAAI,GAAG,IAAIC,IAAI,CAACX,OAAO,CAACY,SAAS,CAAC;MACxC,MAAMC,SAAS,GAAG,GAAGL,UAAU,CAACE,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAC,IAAIJ,IAAI,CAACK,WAAW,CAAC,CAAC,EAAE;MAExE,IAAI,CAACR,eAAe,CAACM,SAAS,CAAC,EAAE;QAC/BN,eAAe,CAACM,SAAS,CAAC,GAAG,CAAC;MAChC;MAEAN,eAAe,CAACM,SAAS,CAAC,IAAIb,OAAO,CAACC,MAAM;IAC9C,CAAC,CAAC;;IAEF;IACA,MAAMe,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACX,eAAe,CAAC,CAACY,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC/D,MAAM,CAACC,MAAM,EAAEC,KAAK,CAAC,GAAGH,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC;MACpC,MAAM,CAACC,MAAM,EAAEC,KAAK,CAAC,GAAGL,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC;MAEpC,IAAID,KAAK,KAAKG,KAAK,EAAE,OAAOC,QAAQ,CAACJ,KAAK,CAAC,GAAGI,QAAQ,CAACD,KAAK,CAAC;MAC7D,OAAOlB,UAAU,CAACoB,OAAO,CAACN,MAAM,CAAC,GAAGd,UAAU,CAACoB,OAAO,CAACH,MAAM,CAAC;IAChE,CAAC,CAAC;IAEF,MAAMI,YAAY,GAAGb,YAAY,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3C,MAAMC,aAAa,GAAGF,YAAY,CAACG,GAAG,CAACC,KAAK,IAAI1B,eAAe,CAAC0B,KAAK,CAAC,CAAC;IAEvE/C,cAAc,CAAC;MACbC,MAAM,EAAE0C,YAAY;MACpBzC,OAAO,EAAE2C;IACX,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMG,UAAU,GAAIC,UAAU,IAAK;IACjC,MAAMC,OAAO,GAAG;MAAEC,IAAI,EAAE,SAAS;MAAEJ,KAAK,EAAE,OAAO;MAAEK,GAAG,EAAE;IAAU,CAAC;IACnE,OAAO,IAAI3B,IAAI,CAACwB,UAAU,CAAC,CAACI,kBAAkB,CAACC,SAAS,EAAEJ,OAAO,CAAC;EACpE,CAAC;;EAED;EACA,MAAMK,SAAS,GAAG;IAChBtD,MAAM,EAAEF,WAAW,CAACE,MAAM;IAC1BuD,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,kBAAkB;MACzB9C,IAAI,EAAEZ,WAAW,CAACG,OAAO;MACzBwD,eAAe,EAAE,SAAS;MAC1BC,WAAW,EAAE,SAAS;MACtBC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAE;MACZ,CAAC;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE;MACR;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE,IAAI;QACjBL,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,IAAIjF,aAAa,CAACM,OAAO,EAAE;IACzB,oBAAOX,OAAA;MAAK0F,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3E;EAEA,oBACE/F,OAAA;IAAK0F,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB3F,OAAA;MAAK0F,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtB3F,OAAA;QAAA2F,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjB/F,OAAA;QAAA2F,QAAA,gBACE3F,OAAA;UAAI0F,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrC/F,OAAA;UAAA2F,QAAA,eAAI3F,OAAA,CAACZ,IAAI;YAAC4G,EAAE,EAAC,WAAW;YAAAL,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eAEN/F,OAAA;MAAK0F,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B3F,OAAA;QAAK0F,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrB3F,OAAA;UAAA2F,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClB/F,OAAA;UAAK0F,SAAS,EAAC,QAAQ;UAAAC,QAAA,eACrB3F,OAAA;YAAOiG,IAAI,EAAC,MAAM;YAACC,WAAW,EAAC;UAAW;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAEL1F,aAAa,CAACO,KAAK,iBAClBZ,OAAA;QAAK0F,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEtF,aAAa,CAACO;MAAK;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAC1D,eAED/F,OAAA;QAAK0F,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB3F,OAAA;UAAK0F,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB3F,OAAA;YAAA2F,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvB/F,OAAA;YAAK0F,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAC,GAAC,EAACtF,aAAa,CAACE,aAAa,CAAC4F,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,eAEN/F,OAAA;UAAK0F,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB3F,OAAA;YAAA2F,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC3B/F,OAAA;YAAK0F,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAC,GAAC,EAACtF,aAAa,CAACG,iBAAiB,CAAC2F,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7E,CAAC,eAEN/F,OAAA;UAAK0F,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB3F,OAAA;YAAA2F,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzB/F,OAAA;YAAK0F,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAC,GAAC,EAACtF,aAAa,CAACI,cAAc,CAAC0F,OAAO,CAAC,CAAC,CAAC;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E,CAAC,eAEN/F,OAAA;UAAK0F,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB3F,OAAA;YAAA2F,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACf/F,OAAA;YAAK0F,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAEtF,aAAa,CAACK,MAAM,EAAC,OAAK;UAAA;YAAAkF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN/F,OAAA;QAAK0F,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrC3F,OAAA;UAAA2F,QAAA,EAAI;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1B/F,OAAA;UAAK0F,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAC7B1E,WAAW,CAACE,MAAM,CAACiF,MAAM,GAAG,CAAC,gBAC5BpG,OAAA,CAACV,GAAG;YAACuC,IAAI,EAAE4C,SAAU;YAACL,OAAO,EAAEW;UAAa;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAE/C/F,OAAA;YAAG0F,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAAC;UAAgC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QACnE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN/F,OAAA;QAAK0F,SAAS,EAAC,0BAA0B;QAAAC,QAAA,gBACvC3F,OAAA;UAAA2F,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAExBhF,eAAe,gBACdf,OAAA;UAAA2F,QAAA,EAAG;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,GAC/BlF,QAAQ,CAACuF,MAAM,KAAK,CAAC,gBACvBpG,OAAA;UAAK0F,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1B3F,OAAA;YAAA2F,QAAA,EAAG;UAAyB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAChC/F,OAAA,CAACZ,IAAI;YAAC4G,EAAE,EAAC,WAAW;YAACN,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,gBAEN/F,OAAA;UAAK0F,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC9B3F,OAAA;YAAO0F,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC9B3F,OAAA;cAAA2F,QAAA,eACE3F,OAAA;gBAAA2F,QAAA,gBACE3F,OAAA;kBAAA2F,QAAA,EAAI;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACb/F,OAAA;kBAAA2F,QAAA,EAAI;gBAAQ;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACjB/F,OAAA;kBAAA2F,QAAA,EAAI;gBAAW;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACpB/F,OAAA;kBAAA2F,QAAA,EAAI;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACb;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACR/F,OAAA;cAAA2F,QAAA,EACG9E,QAAQ,CAACmD,GAAG,CAAChC,OAAO,iBACnBhC,OAAA;gBAAA2F,QAAA,gBACE3F,OAAA;kBAAA2F,QAAA,EAAKzB,UAAU,CAAClC,OAAO,CAACY,SAAS;gBAAC;kBAAAgD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACxC/F,OAAA;kBAAA2F,QAAA,EAAK3D,OAAO,CAACqE;gBAAQ;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC3B/F,OAAA;kBAAA2F,QAAA,EAAK3D,OAAO,CAACsE,WAAW,IAAI;gBAAG;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACrC/F,OAAA;kBAAI0F,SAAS,EAAC,QAAQ;kBAAAC,QAAA,GAAC,GAAC,EAAC3D,OAAO,CAACC,MAAM,CAACkE,OAAO,CAAC,CAAC,CAAC;gBAAA;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC;cAAA,GAJjD/D,OAAO,CAACuE,GAAG;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKhB,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEN/F,OAAA;QAAK0F,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAChC3F,OAAA,CAACZ,IAAI;UAAC4G,EAAE,EAAC,WAAW;UAACN,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAE/C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5F,EAAA,CA7QID,SAAS;AAAAsG,EAAA,GAATtG,SAAS;AA+Qf,eAAeA,SAAS;AAAC,IAAAsG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}