{"ast":null,"code":"var _jsxFileName = \"/Users/eddy/My Drive/NYU/Others/Hackathon/NoSpendy/NoSpendyFrontend/src/dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./dashboard.css\";\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [dashboardData, setDashboardData] = useState({\n    totalExpenses: 0,\n    spendingChallenge: 0,\n    spentThisMonth: 0,\n    streak: 0,\n    loading: true,\n    error: null\n  });\n  const [expenses, setExpenses] = useState([]);\n  const [expensesLoading, setExpensesLoading] = useState(true);\n  const [monthlyData, setMonthlyData] = useState({\n    labels: [],\n    amounts: [],\n    backgroundColors: []\n  });\n\n  // Format date properly\n  const formatDate = dateString => {\n    if (!dateString) return 'N/A';\n    try {\n      const date = new Date(dateString);\n      // Check if date is valid\n      if (isNaN(date.getTime())) return 'Invalid date';\n      return date.toLocaleDateString('en-US', {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric'\n      });\n    } catch (error) {\n      console.error(\"Date formatting error:\", error);\n      return 'Error formatting date';\n    }\n  };\n\n  // Prepare data for the monthly spending chart\n  const prepareMonthlyChartData = expenses => {\n    // Create an array for all 12 months of the current year\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const currentYear = new Date().getFullYear();\n    const allMonths = monthNames.map(month => `${month}`);\n\n    // Initialize amounts for all months to 0\n    const monthlyAmounts = new Array(12).fill(0);\n\n    // Group expenses by month\n    if (expenses && expenses.length > 0) {\n      expenses.forEach(expense => {\n        try {\n          const date = new Date(expense.createdAt || expense.date);\n          // Only include expenses from current year and valid dates\n          if (!isNaN(date.getTime()) && date.getFullYear() === currentYear) {\n            const monthIndex = date.getMonth();\n            monthlyAmounts[monthIndex] += expense.amount;\n          }\n        } catch (error) {\n          console.error(\"Error processing expense date:\", error, expense);\n        }\n      });\n    }\n\n    // Get current month index for highlighting\n    const currentMonthIndex = new Date().getMonth();\n\n    // Create background colors array with current month highlighted\n    const backgroundColors = monthlyAmounts.map((_, index) => index === currentMonthIndex ? '#4caf50' : '#e0e0e0');\n\n    // Add some sample data if no real data exists (for testing)\n    if (monthlyAmounts.every(amount => amount === 0)) {\n      monthlyAmounts[currentMonthIndex] = 100;\n      monthlyAmounts[(currentMonthIndex + 1) % 12] = 50;\n      monthlyAmounts[(currentMonthIndex + 2) % 12] = 75;\n    }\n    setMonthlyData({\n      labels: allMonths,\n      amounts: monthlyAmounts,\n      backgroundColors: backgroundColors\n    });\n  };\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        // Get monthly expenses\n        const monthlyResponse = await axios.get('/expenses/monthly', {\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`\n          }\n        });\n\n        // Get all expenses for total\n        const allExpensesResponse = await axios.get('/expenses/all', {\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`\n          }\n        });\n\n        // Get user profile for savings goal and streak\n        const userProfileResponse = await axios.get('/users/profile', {\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`\n          }\n        });\n\n        // Calculate total expenses\n        const totalExpenses = allExpensesResponse.data.reduce((sum, expense) => sum + expense.amount, 0);\n\n        // Get monthly spending\n        const spentThisMonth = monthlyResponse.data.totalSpent || 0;\n\n        // Get user's savings goal (spending challenge)\n        const spendingChallenge = userProfileResponse.data.savingsGoal || 0;\n\n        // Get user's streak\n        const streak = userProfileResponse.data.streak || 0;\n\n        // Set expenses for history section\n        setExpenses(allExpensesResponse.data);\n        setExpensesLoading(false);\n\n        // Prepare data for the monthly spending chart\n        prepareMonthlyChartData(allExpensesResponse.data);\n        setDashboardData({\n          totalExpenses,\n          spendingChallenge,\n          spentThisMonth,\n          streak,\n          loading: false,\n          error: null\n        });\n      } catch (error) {\n        console.error(\"Error fetching dashboard data:\", error);\n        setDashboardData(prev => ({\n          ...prev,\n          loading: false,\n          error: \"Failed to load dashboard data\"\n        }));\n        setExpensesLoading(false);\n\n        // Still prepare some sample chart data even if there's an error\n        prepareMonthlyChartData([]);\n      }\n    };\n    if (currentUser) {\n      fetchDashboardData();\n    }\n  }, [currentUser]);\n\n  // Chart configuration\n  const chartData = {\n    labels: monthlyData.labels,\n    datasets: [{\n      label: 'Monthly Spending',\n      data: monthlyData.amounts,\n      backgroundColor: monthlyData.backgroundColors || Array(12).fill('#e0e0e0'),\n      borderColor: monthlyData.backgroundColors ? monthlyData.backgroundColors.map(color => color === '#4caf50' ? '#388e3c' : '#bdbdbd') : Array(12).fill('#bdbdbd'),\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Overview',\n        align: 'start',\n        font: {\n          size: 24,\n          weight: 'bold'\n        },\n        padding: {\n          bottom: 30\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title: function (context) {\n            return context[0].label;\n          },\n          label: function (context) {\n            return `from ${context.raw} $`;\n          }\n        },\n        backgroundColor: '#a5d68a',\n        titleColor: '#000',\n        bodyColor: '#000',\n        borderWidth: 0,\n        cornerRadius: 8,\n        displayColors: false,\n        padding: 12\n      }\n    },\n    scales: {\n      y: {\n        display: false,\n        beginAtZero: true\n      },\n      x: {\n        grid: {\n          display: true,\n          drawBorder: false,\n          lineWidth: 1,\n          drawTicks: false\n        },\n        ticks: {\n          padding: 10,\n          font: {\n            size: 14\n          }\n        }\n      }\n    }\n  };\n  if (dashboardData.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-loading\",\n      children: \"Loading dashboard data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"NoSpendy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"active\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/dashboard\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/expenses\",\n            children: \"Log Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/profile\",\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signout\",\n            children: \"Sign Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topbar\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), dashboardData.error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-error\",\n        children: dashboardData.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-amount\",\n            children: [\"$\", dashboardData.totalExpenses.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Spending Challenge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-amount\",\n            children: [\"$\", dashboardData.spendingChallenge.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Spent This Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-amount\",\n            children: [\"$\", dashboardData.spentThisMonth.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Streak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-amount\",\n            children: [dashboardData.streak, \" Days\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spending-chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Spending Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: monthlyData.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n            data: chartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data-message\",\n            children: \"Not enough data to display chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spending-history-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Spending History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), expensesLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading expense history...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this) : expenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-expenses\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No expenses recorded yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/expenses\",\n            className: \"action-button\",\n            children: \"Log Your First Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-history\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"expense-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: expenses.map(expense => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatDate(expense.createdAt || expense.date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: expense.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: expense.description || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"amount\",\n                  children: [\"$\", expense.amount.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 23\n                }, this)]\n              }, expense._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-actions\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/expenses\",\n          className: \"action-button\",\n          children: \"Log New Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"blfZ3XVVMlq6LZTsF08KMgHccZY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","Link","axios","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","currentUser","dashboardData","setDashboardData","totalExpenses","spendingChallenge","spentThisMonth","streak","loading","error","expenses","setExpenses","expensesLoading","setExpensesLoading","monthlyData","setMonthlyData","labels","amounts","backgroundColors","formatDate","dateString","date","Date","isNaN","getTime","toLocaleDateString","year","month","day","console","prepareMonthlyChartData","monthNames","currentYear","getFullYear","allMonths","map","monthlyAmounts","Array","fill","length","forEach","expense","createdAt","monthIndex","getMonth","amount","currentMonthIndex","_","index","every","fetchDashboardData","monthlyResponse","get","headers","Authorization","token","allExpensesResponse","userProfileResponse","data","reduce","sum","totalSpent","savingsGoal","prev","chartData","datasets","label","backgroundColor","borderColor","color","borderWidth","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","title","text","align","font","size","weight","padding","bottom","tooltip","callbacks","context","raw","titleColor","bodyColor","cornerRadius","displayColors","scales","y","beginAtZero","x","grid","drawBorder","lineWidth","drawTicks","ticks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","toFixed","options","category","description","_id","_c","$RefreshReg$"],"sources":["/Users/eddy/My Drive/NYU/Others/Hackathon/NoSpendy/NoSpendyFrontend/src/dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./dashboard.css\";\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\n// Register ChartJS components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Dashboard = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [dashboardData, setDashboardData] = useState({\r\n    totalExpenses: 0,\r\n    spendingChallenge: 0,\r\n    spentThisMonth: 0,\r\n    streak: 0,\r\n    loading: true,\r\n    error: null\r\n  });\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [expensesLoading, setExpensesLoading] = useState(true);\r\n  const [monthlyData, setMonthlyData] = useState({\r\n    labels: [],\r\n    amounts: [],\r\n    backgroundColors: []\r\n  });\r\n\r\n  // Format date properly\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return 'N/A';\r\n    \r\n    try {\r\n      const date = new Date(dateString);\r\n      // Check if date is valid\r\n      if (isNaN(date.getTime())) return 'Invalid date';\r\n      \r\n      return date.toLocaleDateString('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric'\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Date formatting error:\", error);\r\n      return 'Error formatting date';\r\n    }\r\n  };\r\n\r\n  // Prepare data for the monthly spending chart\r\n  const prepareMonthlyChartData = (expenses) => {\r\n    // Create an array for all 12 months of the current year\r\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    const currentYear = new Date().getFullYear();\r\n    const allMonths = monthNames.map(month => `${month}`);\r\n    \r\n    // Initialize amounts for all months to 0\r\n    const monthlyAmounts = new Array(12).fill(0);\r\n    \r\n    // Group expenses by month\r\n    if (expenses && expenses.length > 0) {\r\n      expenses.forEach(expense => {\r\n        try {\r\n          const date = new Date(expense.createdAt || expense.date);\r\n          // Only include expenses from current year and valid dates\r\n          if (!isNaN(date.getTime()) && date.getFullYear() === currentYear) {\r\n            const monthIndex = date.getMonth();\r\n            monthlyAmounts[monthIndex] += expense.amount;\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error processing expense date:\", error, expense);\r\n        }\r\n      });\r\n    }\r\n    \r\n    // Get current month index for highlighting\r\n    const currentMonthIndex = new Date().getMonth();\r\n    \r\n    // Create background colors array with current month highlighted\r\n    const backgroundColors = monthlyAmounts.map((_, index) => \r\n      index === currentMonthIndex ? '#4caf50' : '#e0e0e0'\r\n    );\r\n    \r\n    // Add some sample data if no real data exists (for testing)\r\n    if (monthlyAmounts.every(amount => amount === 0)) {\r\n      monthlyAmounts[currentMonthIndex] = 100;\r\n      monthlyAmounts[(currentMonthIndex + 1) % 12] = 50;\r\n      monthlyAmounts[(currentMonthIndex + 2) % 12] = 75;\r\n    }\r\n    \r\n    setMonthlyData({\r\n      labels: allMonths,\r\n      amounts: monthlyAmounts,\r\n      backgroundColors: backgroundColors\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        // Get monthly expenses\r\n        const monthlyResponse = await axios.get('/expenses/monthly', {\r\n          headers: {\r\n            Authorization: `Bearer ${currentUser.token}`\r\n          }\r\n        });\r\n\r\n        // Get all expenses for total\r\n        const allExpensesResponse = await axios.get('/expenses/all', {\r\n          headers: {\r\n            Authorization: `Bearer ${currentUser.token}`\r\n          }\r\n        });\r\n\r\n        // Get user profile for savings goal and streak\r\n        const userProfileResponse = await axios.get('/users/profile', {\r\n          headers: {\r\n            Authorization: `Bearer ${currentUser.token}`\r\n          }\r\n        });\r\n\r\n        // Calculate total expenses\r\n        const totalExpenses = allExpensesResponse.data.reduce(\r\n          (sum, expense) => sum + expense.amount, \r\n          0\r\n        );\r\n\r\n        // Get monthly spending\r\n        const spentThisMonth = monthlyResponse.data.totalSpent || 0;\r\n\r\n        // Get user's savings goal (spending challenge)\r\n        const spendingChallenge = userProfileResponse.data.savingsGoal || 0;\r\n\r\n        // Get user's streak\r\n        const streak = userProfileResponse.data.streak || 0;\r\n\r\n        // Set expenses for history section\r\n        setExpenses(allExpensesResponse.data);\r\n        setExpensesLoading(false);\r\n\r\n        // Prepare data for the monthly spending chart\r\n        prepareMonthlyChartData(allExpensesResponse.data);\r\n\r\n        setDashboardData({\r\n          totalExpenses,\r\n          spendingChallenge,\r\n          spentThisMonth,\r\n          streak,\r\n          loading: false,\r\n          error: null\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching dashboard data:\", error);\r\n        setDashboardData(prev => ({\r\n          ...prev,\r\n          loading: false,\r\n          error: \"Failed to load dashboard data\"\r\n        }));\r\n        setExpensesLoading(false);\r\n        \r\n        // Still prepare some sample chart data even if there's an error\r\n        prepareMonthlyChartData([]);\r\n      }\r\n    };\r\n\r\n    if (currentUser) {\r\n      fetchDashboardData();\r\n    }\r\n  }, [currentUser]);\r\n\r\n  // Chart configuration\r\n  const chartData = {\r\n    labels: monthlyData.labels,\r\n    datasets: [\r\n      {\r\n        label: 'Monthly Spending',\r\n        data: monthlyData.amounts,\r\n        backgroundColor: monthlyData.backgroundColors || Array(12).fill('#e0e0e0'),\r\n        borderColor: monthlyData.backgroundColors \r\n          ? monthlyData.backgroundColors.map(color => color === '#4caf50' ? '#388e3c' : '#bdbdbd')\r\n          : Array(12).fill('#bdbdbd'),\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Overview',\r\n        align: 'start',\r\n        font: {\r\n          size: 24,\r\n          weight: 'bold'\r\n        },\r\n        padding: {\r\n          bottom: 30\r\n        }\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          title: function(context) {\r\n            return context[0].label;\r\n          },\r\n          label: function(context) {\r\n            return `from ${context.raw} $`;\r\n          }\r\n        },\r\n        backgroundColor: '#a5d68a',\r\n        titleColor: '#000',\r\n        bodyColor: '#000',\r\n        borderWidth: 0,\r\n        cornerRadius: 8,\r\n        displayColors: false,\r\n        padding: 12\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        display: false,\r\n        beginAtZero: true\r\n      },\r\n      x: {\r\n        grid: {\r\n          display: true,\r\n          drawBorder: false,\r\n          lineWidth: 1,\r\n          drawTicks: false\r\n        },\r\n        ticks: {\r\n          padding: 10,\r\n          font: {\r\n            size: 14\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  if (dashboardData.loading) {\r\n    return <div className=\"dashboard-loading\">Loading dashboard data...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"sidebar\">\r\n        <h2>NoSpendy</h2>\r\n        <ul>\r\n          <li className=\"active\"><Link to=\"/dashboard\">Dashboard</Link></li>\r\n          <li><Link to=\"/expenses\">Log Expenses</Link></li>\r\n          <li><Link to=\"/profile\">Profile</Link></li>\r\n          <li><Link to=\"/signout\">Sign Out</Link></li>\r\n        </ul>\r\n      </div>\r\n      \r\n      <div className=\"main-content\">\r\n        <div className=\"topbar\">\r\n          <h1>Dashboard</h1>\r\n        </div>\r\n        \r\n        {dashboardData.error && (\r\n          <div className=\"dashboard-error\">{dashboardData.error}</div>\r\n        )}\r\n        \r\n        <div className=\"top-stats\">\r\n          <div className=\"stat-card\">\r\n            <h3>Total Expenses</h3>\r\n            <div className=\"stat-amount\">${dashboardData.totalExpenses.toFixed(2)}</div>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>Spending Challenge</h3>\r\n            <div className=\"stat-amount\">${dashboardData.spendingChallenge.toFixed(2)}</div>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>Spent This Month</h3>\r\n            <div className=\"stat-amount\">${dashboardData.spentThisMonth.toFixed(2)}</div>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>Streak</h3>\r\n            <div className=\"stat-amount\">{dashboardData.streak} Days</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Spending Chart Section */}\r\n        <div className=\"spending-chart-section\">\r\n          <h2>Spending Overview</h2>\r\n          <div className=\"chart-container\">\r\n            {monthlyData.labels.length > 0 ? (\r\n              <Bar data={chartData} options={chartOptions} />\r\n            ) : (\r\n              <p className=\"no-data-message\">Not enough data to display chart</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Spending History Section */}\r\n        <div className=\"spending-history-section\">\r\n          <h2>Spending History</h2>\r\n          \r\n          {expensesLoading ? (\r\n            <p>Loading expense history...</p>\r\n          ) : expenses.length === 0 ? (\r\n            <div className=\"no-expenses\">\r\n              <p>No expenses recorded yet.</p>\r\n              <Link to=\"/expenses\" className=\"action-button\">Log Your First Expense</Link>\r\n            </div>\r\n          ) : (\r\n            <div className=\"expense-history\">\r\n              <table className=\"expense-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Date</th>\r\n                    <th>Category</th>\r\n                    <th>Description</th>\r\n                    <th>Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {expenses.map(expense => (\r\n                    <tr key={expense._id}>\r\n                      <td>{formatDate(expense.createdAt || expense.date)}</td>\r\n                      <td>{expense.category}</td>\r\n                      <td>{expense.description || '-'}</td>\r\n                      <td className=\"amount\">${expense.amount.toFixed(2)}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"dashboard-actions\">\r\n          <Link to=\"/expenses\" className=\"action-button\">\r\n            Log New Expense\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}