{"ast":null,"code":"var _jsxFileName = \"/Users/eddy/My Drive/NYU/Others/Hackathon/NoSpendy/NoSpendyFrontend/src/dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./dashboard.css\";\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register ChartJS components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Dashboard = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const [dashboardData, setDashboardData] = useState({\n    totalExpenses: 0,\n    spendingChallenge: 0,\n    spentThisMonth: 0,\n    streak: 0,\n    loading: true,\n    error: null\n  });\n  const [expenses, setExpenses] = useState([]);\n  const [expensesLoading, setExpensesLoading] = useState(true);\n  const [monthlyData, setMonthlyData] = useState({\n    labels: [],\n    amounts: [],\n    backgroundColors: []\n  });\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        // Get monthly expenses\n        const monthlyResponse = await axios.get('/expenses/monthly', {\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`\n          }\n        });\n\n        // Get all expenses for total\n        const allExpensesResponse = await axios.get('/expenses/all', {\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`\n          }\n        });\n\n        // Get user profile for savings goal and streak\n        const userProfileResponse = await axios.get('/users/profile', {\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`\n          }\n        });\n\n        // Calculate total expenses\n        const totalExpenses = allExpensesResponse.data.reduce((sum, expense) => sum + expense.amount, 0);\n\n        // Get monthly spending\n        const spentThisMonth = monthlyResponse.data.totalSpent;\n\n        // Get user's savings goal (spending challenge)\n        const spendingChallenge = userProfileResponse.data.savingsGoal || 0;\n\n        // Get user's streak\n        const streak = userProfileResponse.data.streak || 0;\n\n        // Set expenses for history section\n        setExpenses(allExpensesResponse.data);\n        setExpensesLoading(false);\n\n        // Prepare data for the monthly spending chart\n        prepareMonthlyChartData(allExpensesResponse.data);\n        setDashboardData({\n          totalExpenses,\n          spendingChallenge,\n          spentThisMonth,\n          streak,\n          loading: false,\n          error: null\n        });\n      } catch (error) {\n        console.error(\"Error fetching dashboard data:\", error);\n        setDashboardData(prev => ({\n          ...prev,\n          loading: false,\n          error: \"Failed to load dashboard data\"\n        }));\n        setExpensesLoading(false);\n      }\n    };\n    if (currentUser) {\n      fetchDashboardData();\n    }\n  }, [currentUser]);\n\n  // Prepare data for the monthly spending chart\n  const prepareMonthlyChartData = expenses => {\n    // Create an array for all 12 months of the current year\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const currentYear = new Date().getFullYear();\n    const allMonths = monthNames.map(month => `${month}`);\n\n    // Initialize amounts for all months to 0\n    const monthlyAmounts = new Array(12).fill(0);\n\n    // Group expenses by month\n    expenses.forEach(expense => {\n      const date = new Date(expense.createdAt);\n      // Only include expenses from current year\n      if (date.getFullYear() === currentYear) {\n        const monthIndex = date.getMonth();\n        monthlyAmounts[monthIndex] += expense.amount;\n      }\n    });\n\n    // Get current month index for highlighting\n    const currentMonthIndex = new Date().getMonth();\n\n    // Create background colors array with current month highlighted\n    const backgroundColors = monthlyAmounts.map((_, index) => index === currentMonthIndex ? '#4caf50' : '#e0e0e0');\n    setMonthlyData({\n      labels: allMonths,\n      amounts: monthlyAmounts,\n      backgroundColors: backgroundColors\n    });\n  };\n\n  // Format date for expense history\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Chart configuration\n  const chartData = {\n    labels: monthlyData.labels,\n    datasets: [{\n      label: 'Monthly Spending',\n      data: monthlyData.amounts,\n      backgroundColor: monthlyData.backgroundColors,\n      borderColor: monthlyData.backgroundColors.map(color => color === '#4caf50' ? '#388e3c' : '#bdbdbd'),\n      borderWidth: 1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: 'Overview',\n        align: 'start',\n        font: {\n          size: 24,\n          weight: 'bold'\n        },\n        padding: {\n          bottom: 30\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title: function (context) {\n            return context[0].label;\n          },\n          label: function (context) {\n            return `from ${context.formattedValue} $`;\n          }\n        },\n        backgroundColor: '#a5d68a',\n        titleColor: '#000',\n        bodyColor: '#000',\n        borderWidth: 0,\n        cornerRadius: 8,\n        displayColors: false,\n        padding: 12\n      }\n    },\n    scales: {\n      y: {\n        display: false,\n        beginAtZero: true\n      },\n      x: {\n        grid: {\n          display: true,\n          drawBorder: false,\n          color: function (context) {\n            return context.tick.value % 1 === 0 ? 'rgba(0,0,0,0.1)' : 'rgba(0,0,0,0)';\n          },\n          lineWidth: 1,\n          drawTicks: false\n        },\n        ticks: {\n          padding: 10,\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    layout: {\n      padding: {\n        top: 20,\n        right: 20,\n        bottom: 20,\n        left: 20\n      }\n    }\n  };\n  if (dashboardData.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-loading\",\n      children: \"Loading dashboard data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"NoSpendy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"active\",\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/expenses\",\n            children: \"Log Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), dashboardData.error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: dashboardData.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Total Expenses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-amount\",\n            children: [\"$\", dashboardData.totalExpenses.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Spending Challenge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-amount\",\n            children: [\"$\", dashboardData.spendingChallenge.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Spent This Month\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-amount\",\n            children: [\"$\", dashboardData.spentThisMonth.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Streak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-amount\",\n            children: [dashboardData.streak, \" Days\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spending-chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Spending Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: monthlyData.labels.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n            data: chartData,\n            options: chartOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-data-message\",\n            children: \"Not enough data to display chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spending-history-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Spending History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), expensesLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading expense history...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this) : expenses.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-expenses\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No expenses recorded yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/expenses\",\n            className: \"action-button\",\n            children: \"Log Your First Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-history\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"expense-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: expenses.map(expense => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: formatDate(expense.createdAt)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: expense.category\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: expense.description || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"amount\",\n                  children: [\"$\", expense.amount.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 23\n                }, this)]\n              }, expense._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-actions\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/expenses\",\n          className: \"action-button\",\n          children: \"Log New Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"blfZ3XVVMlq6LZTsF08KMgHccZY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","Link","axios","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","currentUser","dashboardData","setDashboardData","totalExpenses","spendingChallenge","spentThisMonth","streak","loading","error","expenses","setExpenses","expensesLoading","setExpensesLoading","monthlyData","setMonthlyData","labels","amounts","backgroundColors","fetchDashboardData","monthlyResponse","get","headers","Authorization","token","allExpensesResponse","userProfileResponse","data","reduce","sum","expense","amount","totalSpent","savingsGoal","prepareMonthlyChartData","console","prev","monthNames","currentYear","Date","getFullYear","allMonths","map","month","monthlyAmounts","Array","fill","forEach","date","createdAt","monthIndex","getMonth","currentMonthIndex","_","index","formatDate","dateString","options","year","day","toLocaleDateString","undefined","chartData","datasets","label","backgroundColor","borderColor","color","borderWidth","chartOptions","responsive","maintainAspectRatio","plugins","legend","display","title","text","align","font","size","weight","padding","bottom","tooltip","callbacks","context","formattedValue","titleColor","bodyColor","cornerRadius","displayColors","scales","y","beginAtZero","x","grid","drawBorder","tick","value","lineWidth","drawTicks","ticks","layout","top","right","left","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","type","placeholder","toFixed","length","category","description","_id","_c","$RefreshReg$"],"sources":["/Users/eddy/My Drive/NYU/Others/Hackathon/NoSpendy/NoSpendyFrontend/src/dashboard.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./dashboard.css\";\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\n// Register ChartJS components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Dashboard = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [dashboardData, setDashboardData] = useState({\r\n    totalExpenses: 0,\r\n    spendingChallenge: 0,\r\n    spentThisMonth: 0,\r\n    streak: 0,\r\n    loading: true,\r\n    error: null\r\n  });\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [expensesLoading, setExpensesLoading] = useState(true);\r\n  const [monthlyData, setMonthlyData] = useState({\r\n    labels: [],\r\n    amounts: [],\r\n    backgroundColors: []\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        // Get monthly expenses\r\n        const monthlyResponse = await axios.get('/expenses/monthly', {\r\n          headers: {\r\n            Authorization: `Bearer ${currentUser.token}`\r\n          }\r\n        });\r\n\r\n        // Get all expenses for total\r\n        const allExpensesResponse = await axios.get('/expenses/all', {\r\n          headers: {\r\n            Authorization: `Bearer ${currentUser.token}`\r\n          }\r\n        });\r\n\r\n        // Get user profile for savings goal and streak\r\n        const userProfileResponse = await axios.get('/users/profile', {\r\n          headers: {\r\n            Authorization: `Bearer ${currentUser.token}`\r\n          }\r\n        });\r\n\r\n        // Calculate total expenses\r\n        const totalExpenses = allExpensesResponse.data.reduce(\r\n          (sum, expense) => sum + expense.amount, \r\n          0\r\n        );\r\n\r\n        // Get monthly spending\r\n        const spentThisMonth = monthlyResponse.data.totalSpent;\r\n\r\n        // Get user's savings goal (spending challenge)\r\n        const spendingChallenge = userProfileResponse.data.savingsGoal || 0;\r\n\r\n        // Get user's streak\r\n        const streak = userProfileResponse.data.streak || 0;\r\n\r\n        // Set expenses for history section\r\n        setExpenses(allExpensesResponse.data);\r\n        setExpensesLoading(false);\r\n\r\n        // Prepare data for the monthly spending chart\r\n        prepareMonthlyChartData(allExpensesResponse.data);\r\n\r\n        setDashboardData({\r\n          totalExpenses,\r\n          spendingChallenge,\r\n          spentThisMonth,\r\n          streak,\r\n          loading: false,\r\n          error: null\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching dashboard data:\", error);\r\n        setDashboardData(prev => ({\r\n          ...prev,\r\n          loading: false,\r\n          error: \"Failed to load dashboard data\"\r\n        }));\r\n        setExpensesLoading(false);\r\n      }\r\n    };\r\n\r\n    if (currentUser) {\r\n      fetchDashboardData();\r\n    }\r\n  }, [currentUser]);\r\n\r\n  // Prepare data for the monthly spending chart\r\n  const prepareMonthlyChartData = (expenses) => {\r\n    // Create an array for all 12 months of the current year\r\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    const currentYear = new Date().getFullYear();\r\n    const allMonths = monthNames.map(month => `${month}`);\r\n    \r\n    // Initialize amounts for all months to 0\r\n    const monthlyAmounts = new Array(12).fill(0);\r\n    \r\n    // Group expenses by month\r\n    expenses.forEach(expense => {\r\n      const date = new Date(expense.createdAt);\r\n      // Only include expenses from current year\r\n      if (date.getFullYear() === currentYear) {\r\n        const monthIndex = date.getMonth();\r\n        monthlyAmounts[monthIndex] += expense.amount;\r\n      }\r\n    });\r\n    \r\n    // Get current month index for highlighting\r\n    const currentMonthIndex = new Date().getMonth();\r\n    \r\n    // Create background colors array with current month highlighted\r\n    const backgroundColors = monthlyAmounts.map((_, index) => \r\n      index === currentMonthIndex ? '#4caf50' : '#e0e0e0'\r\n    );\r\n    \r\n    setMonthlyData({\r\n      labels: allMonths,\r\n      amounts: monthlyAmounts,\r\n      backgroundColors: backgroundColors\r\n    });\r\n  };\r\n\r\n  // Format date for expense history\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  // Chart configuration\r\n  const chartData = {\r\n    labels: monthlyData.labels,\r\n    datasets: [\r\n      {\r\n        label: 'Monthly Spending',\r\n        data: monthlyData.amounts,\r\n        backgroundColor: monthlyData.backgroundColors,\r\n        borderColor: monthlyData.backgroundColors.map(color => \r\n          color === '#4caf50' ? '#388e3c' : '#bdbdbd'\r\n        ),\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  \r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Overview',\r\n        align: 'start',\r\n        font: {\r\n          size: 24,\r\n          weight: 'bold'\r\n        },\r\n        padding: {\r\n          bottom: 30\r\n        }\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          title: function(context) {\r\n            return context[0].label;\r\n          },\r\n          label: function(context) {\r\n            return `from ${context.formattedValue} $`;\r\n          }\r\n        },\r\n        backgroundColor: '#a5d68a',\r\n        titleColor: '#000',\r\n        bodyColor: '#000',\r\n        borderWidth: 0,\r\n        cornerRadius: 8,\r\n        displayColors: false,\r\n        padding: 12\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        display: false,\r\n        beginAtZero: true\r\n      },\r\n      x: {\r\n        grid: {\r\n          display: true,\r\n          drawBorder: false,\r\n          color: function(context) {\r\n            return context.tick.value % 1 === 0 ? 'rgba(0,0,0,0.1)' : 'rgba(0,0,0,0)';\r\n          },\r\n          lineWidth: 1,\r\n          drawTicks: false\r\n        },\r\n        ticks: {\r\n          padding: 10,\r\n          font: {\r\n            size: 14\r\n          }\r\n        }\r\n      }\r\n    },\r\n    layout: {\r\n      padding: {\r\n        top: 20,\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 20\r\n      }\r\n    }\r\n  };\r\n\r\n  if (dashboardData.loading) {\r\n    return <div className=\"dashboard-loading\">Loading dashboard data...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"sidebar\">\r\n        <h2>NoSpendy</h2>\r\n        <ul>\r\n          <li className=\"active\">Dashboard</li>\r\n          <li><Link to=\"/expenses\">Log Expenses</Link></li>\r\n        </ul>\r\n      </div>\r\n      \r\n      <div className=\"main-content\">\r\n        <div className=\"topbar\">\r\n          <h1>Dashboard</h1>\r\n          <div className=\"search\">\r\n            <input type=\"text\" placeholder=\"Search...\" />\r\n          </div>\r\n        </div>\r\n        \r\n        {dashboardData.error && (\r\n          <div className=\"error-message\">{dashboardData.error}</div>\r\n        )}\r\n        \r\n        <div className=\"top-stats\">\r\n          <div className=\"stat-card\">\r\n            <h3>Total Expenses</h3>\r\n            <div className=\"stat-amount\">${dashboardData.totalExpenses.toFixed(2)}</div>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>Spending Challenge</h3>\r\n            <div className=\"stat-amount\">${dashboardData.spendingChallenge.toFixed(2)}</div>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>Spent This Month</h3>\r\n            <div className=\"stat-amount\">${dashboardData.spentThisMonth.toFixed(2)}</div>\r\n          </div>\r\n          \r\n          <div className=\"stat-card\">\r\n            <h3>Streak</h3>\r\n            <div className=\"stat-amount\">{dashboardData.streak} Days</div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Spending Chart Section */}\r\n        <div className=\"spending-chart-section\">\r\n          <h2>Spending Overview</h2>\r\n          <div className=\"chart-container\">\r\n            {monthlyData.labels.length > 0 ? (\r\n              <Bar data={chartData} options={chartOptions} />\r\n            ) : (\r\n              <p className=\"no-data-message\">Not enough data to display chart</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Spending History Section */}\r\n        <div className=\"spending-history-section\">\r\n          <h2>Spending History</h2>\r\n          \r\n          {expensesLoading ? (\r\n            <p>Loading expense history...</p>\r\n          ) : expenses.length === 0 ? (\r\n            <div className=\"no-expenses\">\r\n              <p>No expenses recorded yet.</p>\r\n              <Link to=\"/expenses\" className=\"action-button\">Log Your First Expense</Link>\r\n            </div>\r\n          ) : (\r\n            <div className=\"expense-history\">\r\n              <table className=\"expense-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>Date</th>\r\n                    <th>Category</th>\r\n                    <th>Description</th>\r\n                    <th>Amount</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {expenses.map(expense => (\r\n                    <tr key={expense._id}>\r\n                      <td>{formatDate(expense.createdAt)}</td>\r\n                      <td>{expense.category}</td>\r\n                      <td>{expense.description || '-'}</td>\r\n                      <td className=\"amount\">${expense.amount.toFixed(2)}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"dashboard-actions\">\r\n          <Link to=\"/expenses\" className=\"action-button\">\r\n            Log New Expense\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}