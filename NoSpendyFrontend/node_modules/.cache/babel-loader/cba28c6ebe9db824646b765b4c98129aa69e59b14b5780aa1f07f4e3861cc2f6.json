{"ast":null,"code":"var _jsxFileName = \"/Users/eddy/My Drive/NYU/Others/Hackathon/NoSpendy/NoSpendyFrontend/src/expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./expenses.css\";\nimport axios from \"axios\";\n\n// Replace this with a real user ID from your database\n// This should come from your authentication system\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst REAL_USER_ID = \"65e0e0e0e0e0e0e0e0e0e0e0\"; // Replace with actual ID\n\nconst Expenses = () => {\n  _s();\n  const navigate = useNavigate();\n  const [expenses, setExpenses] = useState({\n    food: \"\",\n    transportation: \"\",\n    entertainment: \"\",\n    essentials: \"\"\n  });\n  const [userId, setUserId] = useState(REAL_USER_ID);\n\n  // Ideally, you would get the user ID from your auth system\n  // This is a placeholder for that functionality\n  useEffect(() => {\n    // In a real app, you would check localStorage or a state management system\n    // for the authenticated user's ID\n    const checkAuth = async () => {\n      try {\n        // This would be replaced with your actual auth check\n        // For example: const response = await axios.get('/users/me');\n        // setUserId(response.data._id);\n\n        // For now, we'll use the hardcoded ID\n        console.log(\"Using user ID:\", userId);\n      } catch (error) {\n        console.error(\"Authentication error:\", error);\n        navigate(\"/signin\"); // Redirect to login if not authenticated\n      }\n    };\n    checkAuth();\n  }, [navigate]);\n  const handleChange = e => {\n    setExpenses({\n      ...expenses,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Create individual expense entries for each category\n    const createExpensePromises = [];\n    if (expenses.food && parseFloat(expenses.food) > 0) {\n      createExpensePromises.push(axios.post('/expenses/add', {\n        userId: userId,\n        amount: parseFloat(expenses.food),\n        category: \"Food\",\n        description: \"Food expense\"\n      }));\n    }\n    if (expenses.transportation && parseFloat(expenses.transportation) > 0) {\n      createExpensePromises.push(axios.post('/expenses/add', {\n        userId: userId,\n        amount: parseFloat(expenses.transportation),\n        category: \"Transportation\",\n        description: \"Transportation expense\"\n      }));\n    }\n    if (expenses.entertainment && parseFloat(expenses.entertainment) > 0) {\n      createExpensePromises.push(axios.post('/expenses/add', {\n        userId: userId,\n        amount: parseFloat(expenses.entertainment),\n        category: \"Entertainment\",\n        description: \"Entertainment expense\"\n      }));\n    }\n    if (expenses.essentials && parseFloat(expenses.essentials) > 0) {\n      createExpensePromises.push(axios.post('/expenses/add', {\n        userId: userId,\n        amount: parseFloat(expenses.essentials),\n        category: \"Essentials\",\n        description: \"Essential expense\"\n      }));\n    }\n\n    // Submit all expenses\n    Promise.all(createExpensePromises).then(responses => {\n      alert(\"Expenses added successfully!\");\n      navigate(\"/dashboard\");\n    }).catch(error => {\n      console.error(\"Error adding expense:\", error);\n      alert(\"Failed to add expense. Please try again.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-expenses\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Log Expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Food: $\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"food\",\n        value: expenses.food,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Transportation: $\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"transportation\",\n        value: expenses.transportation,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Entertainment: $\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"entertainment\",\n        value: expenses.entertainment,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Essentials: $\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"essentials\",\n        value: expenses.essentials,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"rae75qIV8sIRAP28pTJgwdAwuCo=\", false, function () {\n  return [useNavigate];\n});\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","REAL_USER_ID","Expenses","_s","navigate","expenses","setExpenses","food","transportation","entertainment","essentials","userId","setUserId","checkAuth","console","log","error","handleChange","e","target","name","value","handleSubmit","preventDefault","createExpensePromises","parseFloat","push","post","amount","category","description","Promise","all","then","responses","alert","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/eddy/My Drive/NYU/Others/Hackathon/NoSpendy/NoSpendyFrontend/src/expenses.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./expenses.css\";\r\nimport axios from \"axios\";\r\n\r\n// Replace this with a real user ID from your database\r\n// This should come from your authentication system\r\nconst REAL_USER_ID = \"65e0e0e0e0e0e0e0e0e0e0e0\"; // Replace with actual ID\r\n\r\nconst Expenses = () => {\r\n  const navigate = useNavigate();\r\n  const [expenses, setExpenses] = useState({\r\n    food: \"\",\r\n    transportation: \"\",\r\n    entertainment: \"\",\r\n    essentials: \"\",\r\n  });\r\n  const [userId, setUserId] = useState(REAL_USER_ID);\r\n\r\n  // Ideally, you would get the user ID from your auth system\r\n  // This is a placeholder for that functionality\r\n  useEffect(() => {\r\n    // In a real app, you would check localStorage or a state management system\r\n    // for the authenticated user's ID\r\n    const checkAuth = async () => {\r\n      try {\r\n        // This would be replaced with your actual auth check\r\n        // For example: const response = await axios.get('/users/me');\r\n        // setUserId(response.data._id);\r\n        \r\n        // For now, we'll use the hardcoded ID\r\n        console.log(\"Using user ID:\", userId);\r\n      } catch (error) {\r\n        console.error(\"Authentication error:\", error);\r\n        navigate(\"/signin\"); // Redirect to login if not authenticated\r\n      }\r\n    };\r\n    \r\n    checkAuth();\r\n  }, [navigate]);\r\n\r\n  const handleChange = (e) => {\r\n    setExpenses({ ...expenses, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Create individual expense entries for each category\r\n    const createExpensePromises = [];\r\n    \r\n    if (expenses.food && parseFloat(expenses.food) > 0) {\r\n      createExpensePromises.push(\r\n        axios.post('/expenses/add', {\r\n          userId: userId,\r\n          amount: parseFloat(expenses.food),\r\n          category: \"Food\",\r\n          description: \"Food expense\"\r\n        })\r\n      );\r\n    }\r\n    \r\n    if (expenses.transportation && parseFloat(expenses.transportation) > 0) {\r\n      createExpensePromises.push(\r\n        axios.post('/expenses/add', {\r\n          userId: userId,\r\n          amount: parseFloat(expenses.transportation),\r\n          category: \"Transportation\",\r\n          description: \"Transportation expense\"\r\n        })\r\n      );\r\n    }\r\n    \r\n    if (expenses.entertainment && parseFloat(expenses.entertainment) > 0) {\r\n      createExpensePromises.push(\r\n        axios.post('/expenses/add', {\r\n          userId: userId,\r\n          amount: parseFloat(expenses.entertainment),\r\n          category: \"Entertainment\",\r\n          description: \"Entertainment expense\"\r\n        })\r\n      );\r\n    }\r\n    \r\n    if (expenses.essentials && parseFloat(expenses.essentials) > 0) {\r\n      createExpensePromises.push(\r\n        axios.post('/expenses/add', {\r\n          userId: userId,\r\n          amount: parseFloat(expenses.essentials),\r\n          category: \"Essentials\",\r\n          description: \"Essential expense\"\r\n        })\r\n      );\r\n    }\r\n    \r\n    // Submit all expenses\r\n    Promise.all(createExpensePromises)\r\n      .then(responses => {\r\n        alert(\"Expenses added successfully!\");\r\n        navigate(\"/dashboard\");\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error adding expense:\", error);\r\n        alert(\"Failed to add expense. Please try again.\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"log-expenses\">\r\n      <header>\r\n        <h1>Log Expenses</h1>\r\n      </header>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Food: $</label>\r\n        <input type=\"text\" name=\"food\" value={expenses.food} onChange={handleChange} />\r\n        \r\n        <label>Transportation: $</label>\r\n        <input type=\"text\" name=\"transportation\" value={expenses.transportation} onChange={handleChange} />\r\n        \r\n        <label>Entertainment: $</label>\r\n        <input type=\"text\" name=\"entertainment\" value={expenses.entertainment} onChange={handleChange} />\r\n        \r\n        <label>Essentials: $</label>\r\n        <input type=\"text\" name=\"essentials\" value={expenses.essentials} onChange={handleChange} />\r\n\r\n        <button type=\"submit\">Add Expense</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,gBAAgB;AACvB,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG,0BAA0B,CAAC,CAAC;;AAEjD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC;IACvCY,IAAI,EAAE,EAAE;IACRC,cAAc,EAAE,EAAE;IAClBC,aAAa,EAAE,EAAE;IACjBC,UAAU,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAACM,YAAY,CAAC;;EAElD;EACA;EACAL,SAAS,CAAC,MAAM;IACd;IACA;IACA,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF;QACA;QACA;;QAEA;QACAC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,MAAM,CAAC;MACvC,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CZ,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;MACvB;IACF,CAAC;IAEDS,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BZ,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACa,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAIJ,CAAC,IAAK;IAC1BA,CAAC,CAACK,cAAc,CAAC,CAAC;;IAElB;IACA,MAAMC,qBAAqB,GAAG,EAAE;IAEhC,IAAInB,QAAQ,CAACE,IAAI,IAAIkB,UAAU,CAACpB,QAAQ,CAACE,IAAI,CAAC,GAAG,CAAC,EAAE;MAClDiB,qBAAqB,CAACE,IAAI,CACxB5B,KAAK,CAAC6B,IAAI,CAAC,eAAe,EAAE;QAC1BhB,MAAM,EAAEA,MAAM;QACdiB,MAAM,EAAEH,UAAU,CAACpB,QAAQ,CAACE,IAAI,CAAC;QACjCsB,QAAQ,EAAE,MAAM;QAChBC,WAAW,EAAE;MACf,CAAC,CACH,CAAC;IACH;IAEA,IAAIzB,QAAQ,CAACG,cAAc,IAAIiB,UAAU,CAACpB,QAAQ,CAACG,cAAc,CAAC,GAAG,CAAC,EAAE;MACtEgB,qBAAqB,CAACE,IAAI,CACxB5B,KAAK,CAAC6B,IAAI,CAAC,eAAe,EAAE;QAC1BhB,MAAM,EAAEA,MAAM;QACdiB,MAAM,EAAEH,UAAU,CAACpB,QAAQ,CAACG,cAAc,CAAC;QAC3CqB,QAAQ,EAAE,gBAAgB;QAC1BC,WAAW,EAAE;MACf,CAAC,CACH,CAAC;IACH;IAEA,IAAIzB,QAAQ,CAACI,aAAa,IAAIgB,UAAU,CAACpB,QAAQ,CAACI,aAAa,CAAC,GAAG,CAAC,EAAE;MACpEe,qBAAqB,CAACE,IAAI,CACxB5B,KAAK,CAAC6B,IAAI,CAAC,eAAe,EAAE;QAC1BhB,MAAM,EAAEA,MAAM;QACdiB,MAAM,EAAEH,UAAU,CAACpB,QAAQ,CAACI,aAAa,CAAC;QAC1CoB,QAAQ,EAAE,eAAe;QACzBC,WAAW,EAAE;MACf,CAAC,CACH,CAAC;IACH;IAEA,IAAIzB,QAAQ,CAACK,UAAU,IAAIe,UAAU,CAACpB,QAAQ,CAACK,UAAU,CAAC,GAAG,CAAC,EAAE;MAC9Dc,qBAAqB,CAACE,IAAI,CACxB5B,KAAK,CAAC6B,IAAI,CAAC,eAAe,EAAE;QAC1BhB,MAAM,EAAEA,MAAM;QACdiB,MAAM,EAAEH,UAAU,CAACpB,QAAQ,CAACK,UAAU,CAAC;QACvCmB,QAAQ,EAAE,YAAY;QACtBC,WAAW,EAAE;MACf,CAAC,CACH,CAAC;IACH;;IAEA;IACAC,OAAO,CAACC,GAAG,CAACR,qBAAqB,CAAC,CAC/BS,IAAI,CAACC,SAAS,IAAI;MACjBC,KAAK,CAAC,8BAA8B,CAAC;MACrC/B,QAAQ,CAAC,YAAY,CAAC;IACxB,CAAC,CAAC,CACDgC,KAAK,CAACpB,KAAK,IAAI;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CmB,KAAK,CAAC,0CAA0C,CAAC;IACnD,CAAC,CAAC;EACN,CAAC;EAED,oBACEnC,OAAA;IAAKqC,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BtC,OAAA;MAAAsC,QAAA,eACEtC,OAAA;QAAAsC,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACT1C,OAAA;MAAM2C,QAAQ,EAAErB,YAAa;MAAAgB,QAAA,gBAC3BtC,OAAA;QAAAsC,QAAA,EAAO;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtB1C,OAAA;QAAO4C,IAAI,EAAC,MAAM;QAACxB,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEhB,QAAQ,CAACE,IAAK;QAACsC,QAAQ,EAAE5B;MAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE/E1C,OAAA;QAAAsC,QAAA,EAAO;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChC1C,OAAA;QAAO4C,IAAI,EAAC,MAAM;QAACxB,IAAI,EAAC,gBAAgB;QAACC,KAAK,EAAEhB,QAAQ,CAACG,cAAe;QAACqC,QAAQ,EAAE5B;MAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEnG1C,OAAA;QAAAsC,QAAA,EAAO;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/B1C,OAAA;QAAO4C,IAAI,EAAC,MAAM;QAACxB,IAAI,EAAC,eAAe;QAACC,KAAK,EAAEhB,QAAQ,CAACI,aAAc;QAACoC,QAAQ,EAAE5B;MAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEjG1C,OAAA;QAAAsC,QAAA,EAAO;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5B1C,OAAA;QAAO4C,IAAI,EAAC,MAAM;QAACxB,IAAI,EAAC,YAAY;QAACC,KAAK,EAAEhB,QAAQ,CAACK,UAAW;QAACmC,QAAQ,EAAE5B;MAAa;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE3F1C,OAAA;QAAQ4C,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACvC,EAAA,CAxHID,QAAQ;EAAA,QACKL,WAAW;AAAA;AAAAiD,EAAA,GADxB5C,QAAQ;AA0Hd,eAAeA,QAAQ;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}